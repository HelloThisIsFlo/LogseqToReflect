from .base import ContentProcessor
import re


class HeadingProcessor(ContentProcessor):
    """
    Process headings in the content:
    1. Preserve H1 headings that start the file instead of replacing them
    2. Put first heading of file in a bullet if not already
    """

    def process(self, content):
        # Skip empty content
        if not content:
            return content, False

        lines = content.split("\n")
        new_lines = lines.copy()
        changed = False

        # Find the first real content line (skip the title and blank lines)
        first_content_idx = 0
        # Skip the title line (generated by PageTitleProcessor)
        if lines and lines[0].startswith("# "):
            first_content_idx = 1
            # Skip any blank lines after the title
            while (
                first_content_idx < len(lines) and not lines[first_content_idx].strip()
            ):
                first_content_idx += 1
            # Skip any type tag line
            if (
                first_content_idx < len(lines)
                and lines[first_content_idx].startswith("#")
                and not lines[first_content_idx].startswith("##")
                and not lines[first_content_idx].startswith("# ")
            ):
                first_content_idx += 1
                # Skip any blank lines after the type tag
                while (
                    first_content_idx < len(lines)
                    and not lines[first_content_idx].strip()
                ):
                    first_content_idx += 1

        # If we have remaining content and the first line is a heading (not already in a bullet)
        if first_content_idx < len(lines):
            line = lines[first_content_idx]

            # Check if the line is a heading (starts with one or more #)
            # Match any heading, including H1 headings (we now want to put H1 headings in bullets too)
            heading_match = re.match(r"^(#{1,6})\s+(.*?)$", line)

            if heading_match and not line.strip().startswith("- "):
                # It's a heading not in a bullet - convert it
                heading_level = heading_match.group(1)
                heading_content = heading_match.group(2)
                new_lines[first_content_idx] = f"- {heading_level} {heading_content}"
                changed = True

        return "\n".join(new_lines), changed
